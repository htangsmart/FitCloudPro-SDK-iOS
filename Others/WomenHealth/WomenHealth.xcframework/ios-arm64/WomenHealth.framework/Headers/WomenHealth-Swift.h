#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef WOMENHEALTH_SWIFT_H
#define WOMENHEALTH_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="WomenHealth",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
enum LocalizationKey : NSInteger;
@class NSString;

/// 国际化协议
SWIFT_PROTOCOL("_TtP11WomenHealth11Localizable_")
@protocol Localizable <NSObject>
/// 根据 localizationKey 返回国际化字符串
- (NSString * _Nullable)localizationString:(enum LocalizationKey)localizationKey SWIFT_WARN_UNUSED_RESULT;
@end

/// 国际化Key定义
typedef SWIFT_ENUM(NSInteger, LocalizationKey, open) {
/// 女性健康
  LocalizationKeyWomenHealth = 0,
/// 女性健康设置
  LocalizationKeyWomenHealthSettings = 1,
/// 只记经期
  LocalizationKeyMensesOnly = 2,
/// 月经周期长度和经期长度格式，例如：周期%@天，经期%@天
  LocalizationKeyMenstrualCycleWithDurationFormat = 3,
/// 月经期
  LocalizationKeyMenstrualPhase = 4,
/// 备孕期
  LocalizationKeyPregnancyPreparePhase = 5,
/// 怀孕期
  LocalizationKeyPregnancyPhase = 6,
/// 安全期
  LocalizationKeySafetyPhase = 7,
/// 排卵期
  LocalizationKeyOvulationPhase = 8,
/// 排卵日
  LocalizationKeyOvulationDay = 9,
/// 孕早期
  LocalizationKeyEarlyPregnancyPhase = 10,
/// 孕中期
  LocalizationKeyMidPregnancyPhase = 11,
/// 孕晚期
  LocalizationKeyLatePregnancyPhase = 12,
/// 月经期提醒事件标题格式，例如：距离月经期还有%@天
  LocalizationKeyMensesEventRemindTitleFormat = 13,
/// 预产期提醒事件标题
  LocalizationKeyEDCEventRemindTitle = 14,
/// 经期设置
  LocalizationKeyMensesModeSettingsTitle = 15,
/// 备孕设置
  LocalizationKeyPregnancyPrepareModeSettingsTitle = 16,
/// 孕期设置
  LocalizationKeyPregnancyModeSettingsTitle = 17,
/// 您的月经大概持续几天？
  LocalizationKeyMenstrualDurationQuestion = 18,
/// 经期长度
  LocalizationKeyMenstrualDuration = 19,
/// 选择经期长度（单位：天）
  LocalizationKeyMenstrualDurationPickerTitle = 20,
/// 两次月经开始日大概间隔多久？
  LocalizationKeyMenstrualCycleQuestion = 21,
/// 周期长度
  LocalizationKeyMenstrualCycle = 22,
/// 选择周期长度（单位：天）
  LocalizationKeyMenstrualCyclePickerTitle = 23,
/// 您的预产期大概是什么时候？
  LocalizationKeyEDCQuestion = 24,
/// 设置预产期
  LocalizationKeySetEDC = 25,
/// 天数格式，例如 %@天
  LocalizationKeyDaysFormat = 26,
/// 最近一次月经
  LocalizationKeyRecentMenstrualBegin = 27,
/// 日期格式，例如yyyy-MM-dd
  LocalizationKeyDateFormat = 28,
/// 经期开始提醒
  LocalizationKeyMenstrualBeginRemind = 29,
/// 选择提前几天提醒（单位：天）
  LocalizationKeyAdvanceDaysToRemindPickerTitle = 30,
/// 提前几天提醒格式，例如：提前%@天
  LocalizationKeyAdvanceDaysToRemindFormat = 31,
/// 提醒时间
  LocalizationKeyRemindTime = 32,
/// 选择提醒时间
  LocalizationKeyRemindTimePickerTitle = 33,
/// 提醒时间格式，例如： %02ld:%02ld
  LocalizationKeyRemindTimeFormat = 34,
/// 手表提醒
  LocalizationKeyRemindAtWatch = 35,
/// 开始经期模式
  LocalizationKeyStartMensesMode = 36,
/// 开始备孕模式
  LocalizationKeyStartPregnancyPrepareMode = 37,
/// 开始怀孕模式
  LocalizationKeyStartPregnancyMode = 38,
/// 计算预产期
  LocalizationKeyCalcEDC = 39,
/// 怀孕期提醒
  LocalizationKeyPregnancyPhaseRemind = 40,
/// 选择怀孕期提醒方式
  LocalizationKeyPregnancyPhaseRemindMethodPickerTitle = 41,
/// 距离预产期天数
  LocalizationKeyDaysToEDC = 42,
/// 距离预产期还有多少天格式，例如：距离预产期还有%@天
  LocalizationKeyDaysToEDCFormat = 43,
/// 已怀孕天数
  LocalizationKeyPregnancyDays = 44,
/// 已怀孕天数格式，例如：已怀孕%@周%@天
  LocalizationKeyPregnancyDaysFormat = 45,
/// 今日为预产期当日
  LocalizationKeyTodayIsEDC = 46,
/// 今天
  LocalizationKeyToday = 47,
/// 回今天
  LocalizationKeyBackToToday = 48,
/// 月经结束
  LocalizationKeyEndTheMenses = 49,
/// 月经开始
  LocalizationKeyBeginTheMenses = 50,
/// 过去日期，无法操作
  LocalizationKeyPastDateNoOperationAvailable = 51,
/// 经期开始，无法操作
  LocalizationKeyMenstrualBeginDayNoOperationAvailable = 52,
/// 未来日期，无法操作
  LocalizationKeyFutureDateNoOperationAvailable = 53,
/// 月经期 第%@天
  LocalizationKeyMensesBeginDaysFormat = 54,
/// 怀孕概率 %@%%
  LocalizationKeyPregnancyProbabilityFormat = 55,
/// 取消
  LocalizationKeyCancel = 56,
/// 完成
  LocalizationKeyDone = 57,
/// 确定
  LocalizationKeyOk = 58,
/// 经期模式
  LocalizationKeyMenstrualMode = 59,
/// 备孕模式
  LocalizationKeyPregnancyPrepareMode = 60,
/// 怀孕模式
  LocalizationKeyPregnancyMode = 61,
/// 当前处于%@，是否开始%@?
  LocalizationKeyChangeModeConfirmMessageFormat = 62,
/// 是
  LocalizationKeyYes = 63,
/// 否
  LocalizationKeyNo = 64,
};

/// The log level
typedef SWIFT_ENUM(NSInteger, LogLevel, open) {
/// verbose
  LogLevelVerbose = 0,
/// debug
  LogLevelDebug = 1,
/// info
  LogLevelInfo = 2,
/// warning
  LogLevelWarning = 3,
/// error
  LogLevelError = 4,
};


/// 日志协议
SWIFT_PROTOCOL("_TtP11WomenHealth8Loggable_")
@protocol Loggable <NSObject>
/// 打印日志
/// \param logLevel 日志等级
///
/// \param message 日志信息
///
- (void)log:(enum LogLevel)logLevel :(NSString * _Nonnull)message;
@end

/// 经期人为操作类型
typedef SWIFT_ENUM(NSInteger, MenstrualBehaviorDate, open) {
/// 过去日期
  MenstrualBehaviorDatePast = 0,
/// 经期开始当天
  MenstrualBehaviorDateMenstrual_begin = 1,
/// 可以操作结束月经
  MenstrualBehaviorDateEnd_available = 2,
/// 可以操作开始月经
  MenstrualBehaviorDateStart_available = 3,
/// 未来日期
  MenstrualBehaviorDateFuture = 4,
/// 未来超出范围日期
  MenstrualBehaviorDateFuture_outscope = 5,
/// 非法日期
  MenstrualBehaviorDateInvalid = 6,
/// 女性健康未启用
  MenstrualBehaviorDateFeature_disabled = 7,
/// 女性健康模式不匹配，当前为怀孕期
  MenstrualBehaviorDateMode_not_match = 8,
};

/// 经期人为操作类型
typedef SWIFT_ENUM(NSInteger, MenstrualBehaviorType, open) {
/// 结束月经
  MenstrualBehaviorTypeEnd_manual = 0,
/// 开始月经
  MenstrualBehaviorTypeBegin_manual = 1,
};

/// 怀孕期提醒方式
typedef SWIFT_ENUM(NSInteger, PregnancyRemindType, open) {
/// 已怀孕天数
  PregnancyRemindTypePregnancy_days = 0,
/// 距离预产期天数
  PregnancyRemindTypeDays_before_edc = 1,
};

enum WomenHealthMode : NSInteger;
@class NSDate;

/// 智能手表同步协议
SWIFT_PROTOCOL("_TtP11WomenHealth18SmartWatchSyncable_")
@protocol SmartWatchSyncable <NSObject>
/// 如果需要则同步女性健康配置给手表
/// \param userId 用户Id
///
/// \param mode 当前女性健康模式
///
/// \param recentMenstrualBegin 最近一次月经开始日期
///
/// \param menstrualDuration 经期长度
///
/// \param menstrualCycle 周期长度
///
/// \param advanceDaysToRemind 提前几天提醒
///
/// \param hoursInDayForRemind 几点提醒
///
/// \param remindAtWatch 是否在手表上提醒
///
/// \param pregnancyRemindType 怀孕期提醒方式
///
/// \param menstrualDurationWhenManualBehaviorExist：如果存在手动经期操作时经期长度，当为0时，表示没有手动经期操作 
///
- (void)syncIfNeededWith:(NSString * _Nonnull)userId :(enum WomenHealthMode)mode :(NSDate * _Nonnull)recentMenstrualBegin :(NSInteger)menstrualDuration :(NSInteger)menstrualCycle :(NSInteger)advanceDaysToRemind :(NSInteger)hoursInDayForRemind :(BOOL)remindAtWatch :(enum PregnancyRemindType)pregnancyRemindType :(NSInteger)menstrualDurationWhenManualBehaviorExist;
/// 手表是否支持女性健康功能
///
/// returns:
/// 手表是否支持女性健康功能
- (BOOL)withFeatureOnWatch SWIFT_WARN_UNUSED_RESULT;
@end

enum ThemeColorKey : NSInteger;
@class UITraitCollection;
@class UIColor;
enum ThemeImageKey : NSInteger;
@class UIImage;

/// 皮肤协议
SWIFT_PROTOCOL("_TtP11WomenHealth8Themable_")
@protocol Themable <NSObject>
/// 根据 colorKey，traits返回皮肤颜色
- (UIColor * _Nullable)colorWith:(enum ThemeColorKey)colorKey :(UITraitCollection * _Nullable)traits SWIFT_WARN_UNUSED_RESULT;
/// 根据 imageKey，traits返回皮肤图片
- (UIImage * _Nullable)imageWith:(enum ThemeImageKey)imageKey :(UITraitCollection * _Nullable)traits SWIFT_WARN_UNUSED_RESULT;
@end

/// 颜色Key定义
typedef SWIFT_ENUM(NSInteger, ThemeColorKey, open) {
/// 品牌色
  ThemeColorKeyBrand = 0,
/// 分割线
  ThemeColorKeySeparator = 1,
/// UITable背景色
  ThemeColorKeyTable_background_default = 2,
/// Table Cell 背景色
  ThemeColorKeyTablecell_background_default = 3,
/// Secondary Table Cell 背景色
  ThemeColorKeyTablecell_background_secondary = 4,
/// Table Cell chevron.right 图标颜色
  ThemeColorKeyTablecell_accessory_chevron_right = 5,
/// 警示(重要/凸显)按钮标题颜色
  ThemeColorKeyButton_title_destructive = 6,
/// 月经期指示色
  ThemeColorKeyMenstrual_phase_indicator = 7,
/// 安全期指示色
  ThemeColorKeySafety_phase_indicator = 8,
/// 排卵期指示色
  ThemeColorKeyOvulation_phase_indicator = 9,
/// 排卵日指示色
  ThemeColorKeyOvulation_day_indicator = 10,
/// 孕早期指示色
  ThemeColorKeyEarly_pregnancy_indicator = 11,
/// 孕中期指示色
  ThemeColorKeyMid_pregnancy_indicator = 12,
/// 孕晚期指示色
  ThemeColorKeyLate_pregnancy_indicator = 13,
/// 日历背景色
  ThemeColorKeyCalendar_background_default = 14,
/// 选中日期背景色
  ThemeColorKeyCalendar_date_selected_background_default = 15,
};

/// 图片Key定义
typedef SWIFT_ENUM(NSInteger, ThemeImageKey, open) {
/// Table Cell checkmark 图标
  ThemeImageKeyIcon_tablecell_accessory_checkmark = 0,
/// Table Cell chevron.right 图标
  ThemeImageKeyIcon_tablecell_accessory_chevron_right = 1,
/// chevron.down 图标
  ThemeImageKeyIcon_chevron_down = 2,
/// 排卵日图标
  ThemeImageKeyIcon_ovulationday = 3,
/// 日历上一页按钮图标
  ThemeImageKeyIcon_button_calendar_page_prev = 4,
/// 日历下一页按钮图标
  ThemeImageKeyIcon_button_calendar_page_next = 5,
/// 最近一次月经开始日期图标
  ThemeImageKeyIcon_menstrual_date_begin = 6,
/// 开始月经/结束月经图标
  ThemeImageKeyIcon_menstrual_behavior = 7,
/// 预产期图标
  ThemeImageKeyIcon_edc_date = 8,
/// 预产期当日图标
  ThemeImageKeyIcon_edc_today = 9,
/// 导航栏设置图标
  ThemeImageKeyIcon_navbar_settings = 10,
};


/// 女性健康模式
typedef SWIFT_ENUM(NSInteger, WomenHealthMode, open) {
/// 未设置
  WomenHealthModeNone = 0,
/// 经期模式
  WomenHealthModeMenses = 1,
/// 备孕模式
  WomenHealthModePregnancy_prepare = 2,
/// 怀孕模式
  WomenHealthModePregnancy = 3,
};

@class UIViewController;

/// 女性健康模块
SWIFT_CLASS("_TtC11WomenHealth17WomenHealthModule") SWIFT_AVAILABILITY(ios,introduced=11.0)
@interface WomenHealthModule : NSObject
/// 用户Id
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
/// 初始化
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// 初始化女性健康模块
/// \param userId 用户Id
///
/// \param localizationProvider 本地化提供者
///
/// \param themeProvider 皮肤提供者
///
/// \param logProvider 日志服务提供者
///
+ (void)startWith:(NSString * _Nonnull)userId :(id <Localizable> _Nullable)localizationProvider :(id <Themable> _Nullable)themeProvider :(id <Loggable> _Nullable)logProvider;
/// 进入主设置界面
/// \param fromVC 起始视图控制器
///
+ (void)enterMainSettingsFrom:(UIViewController * _Nonnull)fromVC;
/// 进入当前女性健康模式(月经期/备孕期/怀孕期)主页
/// \param fromVC 起始视图控制器
///
+ (void)enterCurrentModeHomeFrom:(UIViewController * _Nonnull)fromVC;
/// 可本地化的字符串数组
///
/// returns:
/// 本地化的字符串数组
+ (NSArray<NSString *> * _Nonnull)localizableStrings SWIFT_WARN_UNUSED_RESULT;
/// 设置同步女性健康配置给手表服务提供者
/// \param provider 同步女性健康配置给手表服务提供者
///
+ (void)setWatchSyncServiceProvider:(id <SmartWatchSyncable> _Nullable)provider;
/// 通知女性健康模块手表女性健康功能可用状态发生改变
+ (void)notifySmartWatchWomenHealthFeatureAvailableChanged;
/// 若有必要将女性健康当前模式配置同步给手表
+ (void)syncModeSettingsToSmartWatchIfNeeded;
/// 导出女性健康数据库
/// \param fromVC 从该视图控制器弹出导出弹窗
///
+ (void)exportDB:(UIViewController * _Nonnull)fromVC;
@end


/// 女性健康模块通知
SWIFT_CLASS("_TtC11WomenHealth24WomenHealthNotifications")
@interface WomenHealthNotifications : NSObject
/// 女性健康当前模式改变通知
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull modeDidChangedNotification;)
+ (NSNotificationName _Nonnull)modeDidChangedNotification SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 女性健康阶段
typedef SWIFT_ENUM(NSInteger, WomenHealthPhase, open) {
/// 未知
  WomenHealthPhaseUnknown = 0,
/// 月经期
  WomenHealthPhaseMenses = 1,
/// 排卵期
  WomenHealthPhaseOvulation = 2,
/// 安全期
  WomenHealthPhaseSafty = 3,
};

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
